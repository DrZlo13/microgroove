use core::fmt::{Display, Formatter, Result};

use heapless::Vec;

#[derive(Clone, Debug, PartialEq)]
pub enum Note {
    CMinus2,
    CSharpMinus2,
    DMinus2,
    DSharpMinus2,
    EMinus2,
    FMinus2,
    FSharpMinus2,
    GMinus2,
    GSharpMinus2,
    AMinus2,
    ASharpMinus2,
    BMinus2,
    CMinus1,
    CSharpMinus1,
    DMinus1,
    DSharpMinus1,
    EMinus1,
    FMinus1,
    FSharpMinus1,
    GMinus1,
    GSharpMinus1,
    AMinus1,
    ASharpMinus1,
    BMinus1,
    C0,
    CSharp0,
    D0,
    DSharp0,
    E0,
    F0,
    FSharp0,
    G0,
    GSharp0,
    A0,
    ASharp0,
    B0,
    C1,
    CSharp1,
    D1,
    DSharp1,
    E1,
    F1,
    FSharp1,
    G1,
    GSharp1,
    A1,
    ASharp1,
    B1,
    C2,
    CSharp2,
    D2,
    DSharp2,
    E2,
    F2,
    FSharp2,
    G2,
    GSharp2,
    A2,
    ASharp2,
    B2,
    C3,
    CSharp3,
    D3,
    DSharp3,
    E3,
    F3,
    FSharp3,
    G3,
    GSharp3,
    A3,
    ASharp3,
    B3,
    C4,
    CSharp4,
    D4,
    DSharp4,
    E4,
    F4,
    FSharp4,
    G4,
    GSharp4,
    A4,
    ASharp4,
    B4,
    C5,
    CSharp5,
    D5,
    DSharp5,
    E5,
    F5,
    FSharp5,
    G5,
    GSharp5,
    A5,
    ASharp5,
    B5,
    C6,
    CSharp6,
    D6,
    DSharp6,
    E6,
    F6,
    FSharp6,
    G6,
    GSharp6,
    A6,
    ASharp6,
    B6,
    C7,
    CSharp7,
    D7,
    DSharp7,
    E7,
    F7,
    FSharp7,
    G7,
    GSharp7,
    A7,
    ASharp7,
    B7,
    C8,
    CSharp8,
    D8,
    DSharp8,
    E8,
    F8,
    G8,
}

impl Note {
    pub fn all_variants() -> Vec<Note, 128> {
        Vec::from_slice(&[
            Note::CMinus2,
            Note::CSharpMinus2,
            Note::DMinus2,
            Note::DSharpMinus2,
            Note::EMinus2,
            Note::FMinus2,
            Note::FSharpMinus2,
            Note::GMinus2,
            Note::GSharpMinus2,
            Note::AMinus2,
            Note::ASharpMinus2,
            Note::BMinus2,
            Note::CMinus1,
            Note::CSharpMinus1,
            Note::DMinus1,
            Note::DSharpMinus1,
            Note::EMinus1,
            Note::FMinus1,
            Note::FSharpMinus1,
            Note::GMinus1,
            Note::GSharpMinus1,
            Note::AMinus1,
            Note::ASharpMinus1,
            Note::BMinus1,
            Note::C0,
            Note::CSharp0,
            Note::D0,
            Note::DSharp0,
            Note::E0,
            Note::F0,
            Note::FSharp0,
            Note::G0,
            Note::GSharp0,
            Note::A0,
            Note::ASharp0,
            Note::B0,
            Note::C1,
            Note::CSharp1,
            Note::D1,
            Note::DSharp1,
            Note::E1,
            Note::F1,
            Note::FSharp1,
            Note::G1,
            Note::GSharp1,
            Note::A1,
            Note::ASharp1,
            Note::B1,
            Note::C2,
            Note::CSharp2,
            Note::D2,
            Note::DSharp2,
            Note::E2,
            Note::F2,
            Note::FSharp2,
            Note::G2,
            Note::GSharp2,
            Note::A2,
            Note::ASharp2,
            Note::B2,
            Note::C3,
            Note::CSharp3,
            Note::D3,
            Note::DSharp3,
            Note::E3,
            Note::F3,
            Note::FSharp3,
            Note::G3,
            Note::GSharp3,
            Note::A3,
            Note::ASharp3,
            Note::B3,
            Note::C4,
            Note::CSharp4,
            Note::D4,
            Note::DSharp4,
            Note::E4,
            Note::F4,
            Note::FSharp4,
            Note::G4,
            Note::GSharp4,
            Note::A4,
            Note::ASharp4,
            Note::B4,
            Note::C5,
            Note::CSharp5,
            Note::D5,
            Note::DSharp5,
            Note::E5,
            Note::F5,
            Note::FSharp5,
            Note::G5,
            Note::GSharp5,
            Note::A5,
            Note::ASharp5,
            Note::B5,
            Note::C6,
            Note::CSharp6,
            Note::D6,
            Note::DSharp6,
            Note::E6,
            Note::F6,
            Note::FSharp6,
            Note::G6,
            Note::GSharp6,
            Note::A6,
            Note::ASharp6,
            Note::B6,
            Note::C7,
            Note::CSharp7,
            Note::D7,
            Note::DSharp7,
            Note::E7,
            Note::F7,
            Note::FSharp7,
            Note::G7,
            Note::GSharp7,
            Note::A7,
            Note::ASharp7,
            Note::B7,
            Note::C8,
            Note::CSharp8,
            Note::D8,
            Note::DSharp8,
            Note::E8,
            Note::F8,
            Note::G8,
        ])
        .unwrap()
    }
}

impl Display for Note {
    fn fmt(&self, f: &mut Formatter) -> Result {
        // TODO TryFrom
        write!(
            f,
            "{}",
            match *self {
                Note::CMinus2 => "C-2",
                Note::CSharpMinus2 => "C#-2",
                Note::DMinus2 => "D-2",
                Note::DSharpMinus2 => "D#-2",
                Note::EMinus2 => "E-2",
                Note::FMinus2 => "F-2",
                Note::FSharpMinus2 => "F#-2",
                Note::GMinus2 => "G-2",
                Note::GSharpMinus2 => "G#-2",
                Note::AMinus2 => "A-2",
                Note::ASharpMinus2 => "A#-2",
                Note::BMinus2 => "B-2",
                Note::CMinus1 => "C-1",
                Note::CSharpMinus1 => "C#-1",
                Note::DMinus1 => "D-1",
                Note::DSharpMinus1 => "D#-1",
                Note::EMinus1 => "E-1",
                Note::FMinus1 => "F-1",
                Note::FSharpMinus1 => "F#-1",
                Note::GMinus1 => "G-1",
                Note::GSharpMinus1 => "G#-1",
                Note::AMinus1 => "A-1",
                Note::ASharpMinus1 => "A#-1",
                Note::BMinus1 => "B-1",
                Note::C0 => "C0",
                Note::CSharp0 => "C#0",
                Note::D0 => "D0",
                Note::DSharp0 => "D#0",
                Note::E0 => "E0",
                Note::F0 => "F0",
                Note::FSharp0 => "F#0",
                Note::G0 => "G0",
                Note::GSharp0 => "G#0",
                Note::A0 => "A0",
                Note::ASharp0 => "A#0",
                Note::B0 => "B0",
                Note::C1 => "C1",
                Note::CSharp1 => "C#1",
                Note::D1 => "D1",
                Note::DSharp1 => "D#1",
                Note::E1 => "E1",
                Note::F1 => "F1",
                Note::FSharp1 => "F#1",
                Note::G1 => "G1",
                Note::GSharp1 => "G#1",
                Note::A1 => "A1",
                Note::ASharp1 => "A#1",
                Note::B1 => "B1",
                Note::C2 => "C2",
                Note::CSharp2 => "C#2",
                Note::D2 => "D2",
                Note::DSharp2 => "D#2",
                Note::E2 => "E2",
                Note::F2 => "F2",
                Note::FSharp2 => "F#2",
                Note::G2 => "G2",
                Note::GSharp2 => "G#2",
                Note::A2 => "A2",
                Note::ASharp2 => "A#2",
                Note::B2 => "B2",
                Note::C3 => "C3",
                Note::CSharp3 => "C#3",
                Note::D3 => "D3",
                Note::DSharp3 => "D#3",
                Note::E3 => "E3",
                Note::F3 => "F3",
                Note::FSharp3 => "F#3",
                Note::G3 => "G3",
                Note::GSharp3 => "G#3",
                Note::A3 => "A3",
                Note::ASharp3 => "A#3",
                Note::B3 => "B3",
                Note::C4 => "C4",
                Note::CSharp4 => "C#4",
                Note::D4 => "D4",
                Note::DSharp4 => "D#4",
                Note::E4 => "E4",
                Note::F4 => "F4",
                Note::FSharp4 => "F#4",
                Note::G4 => "G4",
                Note::GSharp4 => "G#4",
                Note::A4 => "A4",
                Note::ASharp4 => "A#4",
                Note::B4 => "B4",
                Note::C5 => "C5",
                Note::CSharp5 => "C#5",
                Note::D5 => "D5",
                Note::DSharp5 => "D#5",
                Note::E5 => "E5",
                Note::F5 => "F5",
                Note::FSharp5 => "F#5",
                Note::G5 => "G5",
                Note::GSharp5 => "G#5",
                Note::A5 => "A5",
                Note::ASharp5 => "A#5",
                Note::B5 => "B5",
                Note::C6 => "C6",
                Note::CSharp6 => "C#6",
                Note::D6 => "D6",
                Note::DSharp6 => "D#6",
                Note::E6 => "E6",
                Note::F6 => "F6",
                Note::FSharp6 => "F#6",
                Note::G6 => "G6",
                Note::GSharp6 => "G#6",
                Note::A6 => "A6",
                Note::ASharp6 => "A#6",
                Note::B6 => "B6",
                Note::C7 => "C7",
                Note::CSharp7 => "C#7",
                Note::D7 => "D7",
                Note::DSharp7 => "D#7",
                Note::E7 => "E7",
                Note::F7 => "F7",
                Note::FSharp7 => "F#7",
                Note::G7 => "G7",
                Note::GSharp7 => "G#7",
                Note::A7 => "A7",
                Note::ASharp7 => "A#7",
                Note::B7 => "B7",
                Note::C8 => "C8",
                Note::CSharp8 => "C#8",
                Note::D8 => "D8",
                Note::DSharp8 => "D#8",
                Note::E8 => "E8",
                Note::F8 => "F8",
                Note::G8 => "G8",
            }
        )
    }
}
